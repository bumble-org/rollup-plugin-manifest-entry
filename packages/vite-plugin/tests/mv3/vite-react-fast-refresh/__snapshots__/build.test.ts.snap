// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`build fs output: _00 manifest.json 1`] = `
Object {
  "action": Object {
    "default_popup": "src/popup.html",
  },
  "content_scripts": Array [
    Object {
      "js": Array [
        "assets/content.tsx-loader.hash.js",
      ],
      "matches": Array [
        "http://*/*",
      ],
    },
  ],
  "manifest_version": 3,
  "name": "test extension",
  "version": "1.0.0",
  "web_accessible_resources": Array [
    Object {
      "matches": Array [
        "http://*/*",
      ],
      "resources": Array [
        "assets/App.hash.js",
        "assets/content.tsx.hash.js",
        "assets/vendor.hash.js",
      ],
      "use_dynamic_url": true,
    },
  ],
}
`;

exports[`build fs output: _01 output files 1`] = `
Array [
  "assets/App.hash.js",
  "assets/content.tsx-loader.hash.js",
  "assets/content.tsx.hash.js",
  "assets/popup.html.hash.js",
  "assets/vendor.hash.js",
  "manifest.json",
  "src/popup.html",
]
`;

exports[`build fs output: assets/App.hash.js 1`] = `
"import { j as jsxRuntime } from \\"./vendor.hash.js\\";
const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
const App = () => {
  return /* @__PURE__ */ jsxs(\\"div\\", {
    children: [/* @__PURE__ */ jsx(\\"h1\\", {
      children: \\"Popup Page\\"
    }), /* @__PURE__ */ jsx(\\"p\\", {
      children: \\"If you are seeing this, React is working!\\"
    })]
  });
};
export { App as A, jsx as j };
"
`;

exports[`build fs output: assets/content.tsx.hash.js 1`] = `
"import { r as reactDom } from \\"./vendor.hash.js\\";
import { j as jsx, A as App } from \\"./App.hash.js\\";
console.log(\\"content script\\");
const root = document.createElement(\\"div\\");
root.id = \\"root\\";
document.body.append(root);
reactDom.exports.render(/* @__PURE__ */ jsx(App, {}), root);
"
`;

exports[`build fs output: assets/content.tsx-loader.hash.js 1`] = `
"(function () {
  'use strict';

  (async () => {
    await import(
      /* @vite-ignore */
      chrome.runtime.getURL(\\"assets/content.tsx.hash.js\\")
    );
  })().catch(console.error);

})();
"
`;

exports[`build fs output: assets/popup.html.hash.js 1`] = `
"import { r as reactDom } from \\"./vendor.hash.js\\";
import { j as jsx, A as App } from \\"./App.hash.js\\";
const p = function polyfill() {
  const relList = document.createElement(\\"link\\").relList;
  if (relList && relList.supports && relList.supports(\\"modulepreload\\")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel=\\"modulepreload\\"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== \\"childList\\") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === \\"LINK\\" && node.rel === \\"modulepreload\\")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(script) {
    const fetchOpts = {};
    if (script.integrity)
      fetchOpts.integrity = script.integrity;
    if (script.referrerpolicy)
      fetchOpts.referrerPolicy = script.referrerpolicy;
    if (script.crossorigin === \\"use-credentials\\")
      fetchOpts.credentials = \\"include\\";
    else if (script.crossorigin === \\"anonymous\\")
      fetchOpts.credentials = \\"omit\\";
    else
      fetchOpts.credentials = \\"same-origin\\";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
};
p();
console.log(\\"popup script\\");
const root = document.querySelector(\\"#root\\");
reactDom.exports.render(/* @__PURE__ */ jsx(App, {}), root);
"
`;

exports[`build fs output: src/popup.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
  <head>
    <meta charset=\\"UTF-8\\" />
    <meta name=\\"viewport\\" content=\\"width=1000, initial-scale=1.0\\" />
    <title>Popup Page</title>
    <script type=\\"module\\" crossorigin src=\\"/assets/popup.html.hash.js\\"></script>
    <link rel=\\"modulepreload\\" href=\\"/assets/vendor.hash.js\\">
    <link rel=\\"modulepreload\\" href=\\"/assets/App.hash.js\\">
  </head>
  <body>
    <div id=\\"root\\"></div>
    
  </body>
</html>
"
`;
